{"ast":null,"code":"import axios from \"axios\";\nconst apiUrl = \"http://localhost:4000/api\";\nconst headers = {\n  'Content-Type': 'application/json'\n};\n\n// alert(\"Registering\");\n\nexport const RegisterUSER = async data => {\n  return await axios.post(`${apiUrl}/register`, data, {\n    headers\n  }).then(response => {\n    console.log('POST request successful');\n    console.log('Response data:', response.data);\n  }).catch(error => {\n    console.error('Error making POST request:', error);\n  });\n};\n_c = RegisterUSER;\nexport const loginUSER = async ({\n  username,\n  password\n}) => {\n  try {\n    const response = await axios.post(`${apiUrl}/login`, {\n      username,\n      password\n    });\n    localStorage.setItem('token', response.data.token);\n    console.log('setting the session token');\n    alert('login success');\n  } catch (error) {\n    console.error(error.response.data.msg);\n  }\n};\nexport const RegisterJOB = async data => {\n  return await axios.post(`${apiUrl}/registerjob`, data, {\n    headers\n  }).then(response => {\n    console.log('POST request successful');\n    console.log('Response data:', response.data);\n  }).catch(error => {\n    console.error('Error making POST request:', error);\n  });\n};\n_c2 = RegisterJOB;\nexport const getJOBS = async () => {\n  return (await axios.get(`${apiUrl}/getjobs`)).then(response => {\n    console.log('got jobs info');\n  }).catch(error => {\n    console.error('error getting jobs', error);\n  });\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"RegisterUSER\");\n$RefreshReg$(_c2, \"RegisterJOB\");","map":{"version":3,"names":["axios","apiUrl","headers","RegisterUSER","data","post","then","response","console","log","catch","error","_c","loginUSER","username","password","localStorage","setItem","token","alert","msg","RegisterJOB","_c2","getJOBS","get","$RefreshReg$"],"sources":["/home/user/test-intern-project/intern-project/client/src/services/Taskservices.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiUrl = \"http://localhost:4000/api\";\n\nconst headers = {\n    'Content-Type': 'application/json'\n};\n\n// alert(\"Registering\");\n\nexport const RegisterUSER = async (data) => {\n    return await axios.post(`${apiUrl}/register`, data, { headers })\n        .then(response => {\n            console.log('POST request successful');\n            console.log('Response data:', response.data);\n        })\n        .catch(error => {\n            console.error('Error making POST request:', error);\n        });\n}\n\nexport const loginUSER = async ({ username, password }) => {\n    try {\n        const response = await axios.post(`${apiUrl}/login`, { username, password });\n        localStorage.setItem('token', response.data.token);\n        console.log('setting the session token');\n        alert('login success');\n    } catch (error) {\n        console.error(error.response.data.msg)\n    }\n\n}\n\nexport const RegisterJOB = async (data) => {\n    return await axios.post(`${apiUrl}/registerjob`, data, { headers })\n        .then(response => {\n            console.log('POST request successful');\n            console.log('Response data:', response.data);\n        })\n        .catch(error => {\n            console.error('Error making POST request:', error);\n        });\n}\n\nexport const getJOBS = async () => {\n    return (await axios.get(`${apiUrl}/getjobs`))\n        .then(response => {\n            console.log('got jobs info');\n        })\n        .catch(error => {\n            console.error('error getting jobs', error);\n        })\n}\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,2BAA2B;AAE1C,MAAMC,OAAO,GAAG;EACZ,cAAc,EAAE;AACpB,CAAC;;AAED;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EACxC,OAAO,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,MAAM,WAAW,EAAEG,IAAI,EAAE;IAAEF;EAAQ,CAAC,CAAC,CAC3DI,IAAI,CAACC,QAAQ,IAAI;IACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACH,IAAI,CAAC;EAChD,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACtD,CAAC,CAAC;AACV,CAAC;AAAAC,EAAA,GATYT,YAAY;AAWzB,OAAO,MAAMU,SAAS,GAAG,MAAAA,CAAO;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACvD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACK,IAAI,CAAC,GAAGJ,MAAM,QAAQ,EAAE;MAAEa,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC5EC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,QAAQ,CAACH,IAAI,CAACc,KAAK,CAAC;IAClDV,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCU,KAAK,CAAC,eAAe,CAAC;EAC1B,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAACJ,QAAQ,CAACH,IAAI,CAACgB,GAAG,CAAC;EAC1C;AAEJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOjB,IAAI,IAAK;EACvC,OAAO,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,MAAM,cAAc,EAAEG,IAAI,EAAE;IAAEF;EAAQ,CAAC,CAAC,CAC9DI,IAAI,CAACC,QAAQ,IAAI;IACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACH,IAAI,CAAC;EAChD,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACtD,CAAC,CAAC;AACV,CAAC;AAAAW,GAAA,GATYD,WAAW;AAWxB,OAAO,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC/B,OAAO,CAAC,MAAMvB,KAAK,CAACwB,GAAG,CAAC,GAAGvB,MAAM,UAAU,CAAC,EACvCK,IAAI,CAACC,QAAQ,IAAI;IACdC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC9C,CAAC,CAAC;AACV,CAAC;AAAA,IAAAC,EAAA,EAAAU,GAAA;AAAAG,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}